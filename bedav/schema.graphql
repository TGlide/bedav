schema {
  query: Query
}

type Hospital implements Node {
  id: ID!
  generalAvailable: Int
  icuAvailable: Int
  ventilatorsAvailable: Int
  hduAvailable: Int
  generalTotal: Int
  icuTotal: Int
  ventilatorsTotal: Int
  hduTotal: Int
  generalOccupied: Int
  icuOccupied: Int
  hduOccupied: Int
  ventilatorsOccupied: Int
  distance: Float
  name: String
  website: String
  phone: String
  city: String
  district: String
  state: String
  country: String
  postalCode: Int
  placeId: String
  address: String
  category: String
  latitude: Float
  longitude: Float
}

type HospitalConnection {
  pageInfo: PageInfo!
  edges: [HospitalEdge]!
}

type HospitalEdge {
  node: Hospital
  cursor: String!
}

enum HospitalSortField {
  NAME
  DISTANCE
  AVAILABLE_GENERAL
  AVAILABLE_HDU
  AVAILABLE_ICU
  AVAILABLE_VENTILATORS
  OCCUPIED_GENERAL
  OCCUPIED_HDU
  OCCUPIED_ICU
  OCCUPIED_VENTILATORS
  TOTAL_GENERAL
  TOTAL_ICU
  TOTAL_HDU
  TOTAL_VENTILATORS
}

type Locality implements Node {
  id: ID!
  name: String!
  state: String!
  country: String!
  total: Int
  available: Int
  occupied: Int
  lastUpdated: Float
  hospitals(orderBy: HospitalSortField = DISTANCE, descending: Boolean = false, categoryFilters: [String] = [], lat: Float = 0.0, lon: Float = 0.0, searchQuery: String = "", before: String, after: String, first: Int, last: Int): HospitalConnection
}

type LocalityConnection {
  pageInfo: PageInfo!
  edges: [LocalityEdge]!
}

type LocalityEdge {
  node: Locality
  cursor: String!
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  hospitals(orderBy: HospitalSortField = DISTANCE, descending: Boolean = false, categoryFilters: [String] = [], lat: Float = 0.0, lon: Float = 0.0, searchQuery: String = "", before: String, after: String, first: Int, last: Int): HospitalConnection 
  hospital(id: ID!, lat: Float = 0.0, lon: Float = 0.0): Hospital
  localities(before: String, after: String, first: Int, last: Int): LocalityConnection
  locality(name: String): Locality
  node(id: ID!): Node
}
